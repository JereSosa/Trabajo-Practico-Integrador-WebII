extends ../layout

block contenido
  header.flex.items-center.justify-center.px-6.py-4.bg-gray-800.shadow-md.mb-8.relative
    button#menu-btn.absolute.left-6.text-3xl.text-white(type="button")
      i.fas.fa-bars
    h1.text-3xl.font-bold.text-white Gestión de Habitaciones

  main.px-6
    div.grid.gap-10(class="grid-cols-1 md:grid-cols-2 lg:grid-cols-3")
      each ala in alas
        section.bg-white.rounded-2xl.shadow-2xl.p-6.flex.flex-col.gap-6
          h2.text-2xl.font-extrabold.mb-2.text-blue-900 #{ala.nombre}

          if ala.habitaciones.length > 0
            each habitacion in ala.habitaciones
              - const cantCamas = habitacion.camas.length;
              .habitacion.flex.flex-col.gap-2.bg-gradient-to-r.from-gray-100.to-gray-300.rounded-xl.p-4.shadow
                .flex.items-center.mb-1
                  h3.text-lg.font-bold.text-gray-800.flex-1 #{habitacion.nombre}
                  if cantCamas < 2 || ala.nombre.toLowerCase().includes('emergencia')
                    button.add-cama-btn(type="button" data-hab=habitacion.id class="bg-blue-300 text-blue-900 text-sm font-bold px-2 py-1 rounded shadow hover:bg-blue-400") + Agregar Cama

                .flex.flex-wrap.gap-2
                  each cama in habitacion.camas
                    if cama.id && cama.estado
                      - const color = cama.estado === 'ocupada' ? 'bg-red-400' : cama.estado === 'higienizando' ? 'bg-yellow-300' : 'bg-green-400';
                      .cama-card.flex.flex-col.items-center.justify-center.w-24.h-24.rounded-xl.shadow-xl.cursor-pointer.relative.transition.text-white.text-center.text-xs.font-semibold.p-1(
                        class=`${color} hover:scale-105`
                        data-id=cama.id
                        data-estado=cama.estado
                      )
                        span.font-bold.text-lg #{cama.id}
                        i.fas.fa-bed.text-2xl.my-1
                        span.text-xs.break-words.max-w-full.text-center #{cama.estado}
          else
            .text-center.text-gray-600 No hay habitaciones creadas todavía.
            button.add-habitacion-btn.bg-indigo-400.text-white.rounded.px-2.py-1.shadow.mt-2(type="button" data-ala=ala.id) + Crear Habitación

  // Modal
  div#modal.hidden.fixed.inset-0.bg-black.bg-opacity-50.flex.items-center.justify-center.z-50
    div(style="width: 90%;" class="bg-white text-gray-900 rounded-xl shadow-xl max-w-md p-6 relative")
      h2.text-xl.font-bold.mb-4 Detalle de Cama
      form(method="POST" id="modal-form")
        input(type="hidden" name="id" id="modal-id")
        input(type="hidden" name="sexo" id="modal-sexo")

        label.text-sm.font-semibold Estado
        select#modal-estado(name="estado" class="w-full border rounded px-2 py-1 mb-4 text-black")
          option(value="libre_higienizada") Libre Higienizada
          option(value="ocupada") Ocupada
          option(value="higienizando") Higienizando

        label.text-sm.font-semibold Ficha del Paciente

        div#paciente-info.hidden.mb-4
          h3.font-semibold.mb-1 Información del Paciente
          ul.text-sm.text-gray-700
            li
              strong Nombre:
              span#paciente-nombre.ml-1
            li
              strong DNI:
              span#paciente-dni.ml-1
            li
              strong Tipo de Sangre:
              span#paciente-sangre.ml-1
            li
              strong Edad:
              span#paciente-edad.ml-1
            li
              strong Sexo:
              span#paciente-sexo.ml-1
            li
              strong Motivo:
              span#paciente-motivo.ml-1

        div#paciente-select.mb-4
          label.text-sm.font-semibold Seleccionar Paciente
          select#modal-paciente(name="paciente_id" class="w-full border rounded px-2 py-1 text-black")
            option(value="") -- Seleccionar paciente --
            each p in pacientes_disponibles
              option(value=p.id)= p.nombre

        div.flex.justify-between.mt-4
          button(type="submit" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded") Guardar
          button(type="button" onclick="closeModal()" class="text-gray-600 hover:underline") Cancelar

      form(method="POST" id="delete-form" class="mt-2")
        button(type="submit" class="bg-red-500 hover:bg-red-600 text-white w-full px-4 py-2 rounded mt-2") 🗑️ Eliminar

  // JS Variables
  script.
    window.camas = !{JSON.stringify(camas)};
    window.pacientes_disponibles = !{JSON.stringify(pacientes_disponibles)};

  // Scripts principales
  script.
    document.addEventListener('DOMContentLoaded', function () {
      document.querySelectorAll('.add-cama-btn').forEach(btn => {
        btn.addEventListener('click', async (e) => {
          const habitacion_id = e.target.getAttribute('data-hab');
          const response = await fetch('/camas', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ habitacion_id })
          });
          if(response.ok){ alert("Cama agregada correctamente"); location.reload(); }
          else if (response.status === 409){ alert("Máximo permitido de camas en esta habitación"); }
          else { alert("Error al agregar cama"); }
        });
      });

      document.querySelectorAll('.add-habitacion-btn').forEach(btn => {
        btn.addEventListener('click', async (e) => {
          const ala_id = e.target.getAttribute('data-ala');
          const nombre = prompt("Ingresa el nombre de la habitación:");
          if (!nombre) return;
          const response = await fetch('/habitaciones', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ ala_id, nombre })
          });
          if(response.ok){ alert("Habitación creada correctamente"); location.reload(); }
          else { alert("Error al crear habitación"); }
        });
      });

      document.querySelectorAll('.cama-card').forEach(card => {
        card.addEventListener('click', function () {
          const id = this.getAttribute('data-id');
          openModal(id);
        });
      });

      window.openModal = function (id) {
        if (!id || isNaN(id)) return;
        const cama = window.camas.find(c => String(c.id) === String(id));
        if (!cama || !cama.estado) return;

        document.getElementById('modal').classList.remove('hidden');
        document.getElementById('modal-id').value = id;
        document.getElementById('modal-estado').value = cama.estado;
        document.getElementById('modal-sexo').value = cama.sexo || '';
        document.getElementById('modal-form').action = `/camas/${id}/edit`;
        document.getElementById('delete-form').action = `/camas/${id}/delete`;

        if (cama.paciente) {
          document.getElementById('paciente-info').classList.remove('hidden');
          document.getElementById('paciente-nombre').textContent = cama.paciente.nombre || '-';
          document.getElementById('paciente-dni').textContent = cama.paciente.dni || '-';
          document.getElementById('paciente-sangre').textContent = cama.paciente.tipo_sangre || '-';
          document.getElementById('paciente-edad').textContent = cama.paciente.edad || '-';
          document.getElementById('paciente-sexo').textContent = cama.paciente.sexo || '-';
          document.getElementById('paciente-motivo').textContent = cama.paciente.motivo || '-';
          document.getElementById('paciente-select').classList.add('hidden');
        } else {
          document.getElementById('paciente-info').classList.add('hidden');
          document.getElementById('paciente-select').classList.remove('hidden');
        }
      }

      window.closeModal = function () {
        document.getElementById('modal').classList.add('hidden');
      }

      document.getElementById('modal-paciente').addEventListener('change', function () {
        const pacienteId = this.value;
        const paciente = window.pacientes_disponibles.find(p => String(p.id) === pacienteId);
        if (paciente) {
          document.getElementById('modal-sexo').value = paciente.sexo || '';
          document.getElementById('paciente-info').classList.remove('hidden');
          document.getElementById('paciente-nombre').textContent = paciente.nombre || '-';
          document.getElementById('paciente-dni').textContent = paciente.dni || '-';
          document.getElementById('paciente-sangre').textContent = paciente.tipo_sangre || '-';
          document.getElementById('paciente-edad').textContent = paciente.fecha_nacimiento ? calcularEdadJs(paciente.fecha_nacimiento) : '-';
          document.getElementById('paciente-sexo').textContent = paciente.sexo || '-';
          document.getElementById('paciente-motivo').textContent = paciente.motivo_derivacion || 'Emergencia';
          document.getElementById('paciente-select').classList.add('hidden');
        }
      });

      function calcularEdadJs(fecha) {
        const f = new Date(fecha);
        const hoy = new Date();
        let edad = hoy.getFullYear() - f.getFullYear();
        if (hoy.getMonth() < f.getMonth() || (hoy.getMonth() === f.getMonth() && hoy.getDate() < f.getDate())) {
          edad--;
        }
        return edad;
      }
    });
